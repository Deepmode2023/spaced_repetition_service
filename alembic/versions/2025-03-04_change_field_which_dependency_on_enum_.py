"""Change field which dependency on Enum and add SQLEnum field

Revision ID: 6fc6d0ee30b5
Revises: d5fd1301f27a
Create Date: 2025-03-04 19:11:20.096104

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from app.domain.models import LanguageEnum, PartOfSpeachEnum, RepetitionContentTypeEnum

# revision identifiers, used by Alembic.
revision: str = "6fc6d0ee30b5"
down_revision: Union[str, None] = "d5fd1301f27a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    if not op.get_bind().dialect.has_type(
        op.get_bind(), RepetitionContentTypeEnum.get_name()
    ):
        sa.Enum(
            "FILE",
            "WORD",
            "TEXT",
            name=RepetitionContentTypeEnum.get_name(),
        ).create(op.get_bind())
    if not op.get_bind().dialect.has_type(
        op.get_bind(),
        PartOfSpeachEnum.get_name(),
    ):
        sa.Enum(
            "NOUN",
            "PRONOUN",
            "VERB",
            "ADJECTIVE",
            "ADVERB",
            "PREPOSITION",
            "CONJUNCTION",
            "INTERJECTION",
            name=PartOfSpeachEnum.get_name(),
        ).create(op.get_bind())
    if not op.get_bind().dialect.has_type(op.get_bind(), LanguageEnum.get_name()):
        sa.Enum(
            "EN-US",
            "EN_GB",
            "ES",
            "FR",
            "DE",
            "PL",
            name="languageenum",
        ).create(op.get_bind())
    op.execute(
        f"ALTER TABLE repetitions ALTER COLUMN content_type TYPE {RepetitionContentTypeEnum.get_name()} USING content_type::text::{RepetitionContentTypeEnum.get_name()};"
    )
    op.execute(
        f"ALTER TABLE word_repetitions ALTER COLUMN part_of_speech TYPE {PartOfSpeachEnum.get_name()} USING part_of_speech::text::{PartOfSpeachEnum.get_name()};"
    )
    op.execute(
        f"ALTER TABLE word_repetitions ALTER COLUMN language TYPE {LanguageEnum.get_name()} USING language::text::{LanguageEnum.get_name()};"
    )

    op.alter_column(
        "repetitions",
        "content_type",
        existing_type=sa.VARCHAR(),
        type_=postgresql.ENUM(
            "FILE",
            "WORD",
            "TEXT",
            name=RepetitionContentTypeEnum.get_name(),
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "word_repetitions",
        "part_of_speech",
        existing_type=sa.VARCHAR(length=20),
        type_=postgresql.ENUM(
            "NOUN",
            "PRONOUN",
            "VERB",
            "ADJECTIVE",
            "ADVERB",
            "PREPOSITION",
            "CONJUNCTION",
            "INTERJECTION",
            name=PartOfSpeachEnum.get_name(),
        ),
        existing_nullable=True,
    )
    op.alter_column(
        "word_repetitions",
        "language",
        existing_type=sa.VARCHAR(length=30),
        type_=postgresql.ENUM(
            "EN-US",
            "EN_GB",
            "ES",
            "FR",
            "DE",
            "PL",
            name=LanguageEnum.get_name(),
        ),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.alter_column(
        "word_repetitions",
        "language",
        existing_type=postgresql.ENUM(
            "EN-US",
            "EN_GB",
            "ES",
            "FR",
            "DE",
            "PL",
            name=LanguageEnum.get_name(),
        ),
        type_=sa.VARCHAR(length=30),
        existing_nullable=True,
    )
    op.alter_column(
        "word_repetitions",
        "part_of_speech",
        existing_type=postgresql.ENUM(
            "NOUN",
            "PRONOUN",
            "VERB",
            "ADJECTIVE",
            "ADVERB",
            "PREPOSITION",
            "CONJUNCTION",
            "INTERJECTION",
            name=PartOfSpeachEnum.get_name(),
        ),
        type_=sa.VARCHAR(length=20),
        existing_nullable=True,
    )
    op.alter_column(
        "repetitions",
        "content_type",
        existing_type=postgresql.ENUM(
            "FILE",
            "WORD",
            "TEXT",
            name=RepetitionContentTypeEnum.get_name(),
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
